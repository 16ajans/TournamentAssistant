// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: models.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TournamentAssistantShared.Models {

  /// <summary>Holder for reflection information generated from models.proto</summary>
  public static partial class ModelsReflection {

    #region Descriptor
    /// <summary>File descriptor for models.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ModelsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgxtb2RlbHMucHJvdG8SC3Byb3RvLm1vZGVsGg1kaXNjb3JkLnByb3RvIj8K",
            "DkNoYXJhY3RlcmlzdGljEhcKD3NlcmlhbGl6ZWRfbmFtZRgBIAEoCRIUCgxk",
            "aWZmaWN1bHRpZXMYAiADKAUicgoHQmVhdG1hcBIMCgRuYW1lGAEgASgJEhAK",
            "CGxldmVsX2lkGAIgASgJEjMKDmNoYXJhY3RlcmlzdGljGAMgASgLMhsucHJv",
            "dG8ubW9kZWwuQ2hhcmFjdGVyaXN0aWMSEgoKZGlmZmljdWx0eRgEIAEoBSJ7",
            "ChNQcmV2aWV3QmVhdG1hcExldmVsEhAKCGxldmVsX2lkGAEgASgJEgwKBG5h",
            "bWUYAiABKAkSNAoPY2hhcmFjdGVyaXN0aWNzGAMgAygLMhsucHJvdG8ubW9k",
            "ZWwuQ2hhcmFjdGVyaXN0aWMSDgoGbG9hZGVkGAQgASgIIiAKBFVzZXISCgoC",
            "aWQYAiABKAkSDAoEbmFtZRgDIAEoCSIuCgtDb29yZGluYXRvchIfCgR1c2Vy",
            "GAEgASgLMhEucHJvdG8ubW9kZWwuVXNlciKtAwoRR2FtZXBsYXlNb2RpZmll",
            "cnMSOwoHb3B0aW9ucxgBIAEoDjIqLnByb3RvLm1vZGVsLkdhbWVwbGF5TW9k",
            "aWZpZXJzLkdhbWVPcHRpb25zItoCCgtHYW1lT3B0aW9ucxIICgROb25lEAAS",
            "CgoGTm9GYWlsEAESCwoHTm9Cb21icxACEgwKCE5vQXJyb3dzEAQSDwoLTm9P",
            "YnN0YWNsZXMQCBIMCghTbG93U29uZxAQEg0KCUluc3RhRmFpbBAgEg8KC0Zh",
            "aWxPbkNsYXNoEEASEgoNQmF0dGVyeUVuZXJneRCAARIOCglGYXN0Tm90ZXMQ",
            "gAISDQoIRmFzdFNvbmcQgAQSFwoSRGlzYXBwZWFyaW5nQXJyb3dzEIAIEg8K",
            "Ckdob3N0Tm90ZXMQgBASDwoKRGVtb05vRmFpbBCAIBIUCg9EZW1vTm9PYnN0",
            "YWNsZXMQgEASEgoMU3RyaWN0QW5nbGVzEICAARINCgdQcm9Nb2RlEICAAhIN",
            "CgdaZW5Nb2RlEICABBIQCgpTbWFsbEN1YmVzEICACBITCg1TdXBlckZhc3RT",
            "b25nEICAECLlBAoWUGxheWVyU3BlY2lmaWNTZXR0aW5ncxIVCg1wbGF5ZXJf",
            "aGVpZ2h0GAEgASgCEhIKCnNmeF92b2x1bWUYAiABKAISHQoVc2FiZXJfdHJh",
            "aWxfaW50ZW5zaXR5GAMgASgCEiMKG25vdGVfanVtcF9zdGFydF9iZWF0X29m",
            "ZnNldBgEIAEoAhIgChhub3RlX2p1bXBfZml4ZWRfZHVyYXRpb24YBSABKAIS",
            "QgoHb3B0aW9ucxgGIAEoDjIxLnByb3RvLm1vZGVsLlBsYXllclNwZWNpZmlj",
            "U2V0dGluZ3MuUGxheWVyT3B0aW9ucxJqCiBub3RlX2p1bXBfZHVyYXRpb25f",
            "dHlwZV9zZXR0aW5ncxgHIAEoDjJALnByb3RvLm1vZGVsLlBsYXllclNwZWNp",
            "ZmljU2V0dGluZ3MuTm90ZUp1bXBEdXJhdGlvblR5cGVTZXR0aW5ncyLQAQoN",
            "UGxheWVyT3B0aW9ucxIICgROb25lEAASDgoKTGVmdEhhbmRlZBABEhAKDFN0",
            "YXRpY0xpZ2h0cxACEgkKBU5vSHVkEAQSDwoLQWR2YW5jZWRIdWQQCBIQCgxS",
            "ZWR1Y2VEZWJyaXMQEBIUChBBdXRvUGxheWVySGVpZ2h0ECASEQoNTm9GYWls",
            "RWZmZWN0cxBAEhAKC0F1dG9SZXN0YXJ0EIABEhgKE0hpZGVOb3RlU3Bhd25F",
            "ZmZlY3QQgAISEAoLQWRhcHRpdmVTZngQgAQiNwocTm90ZUp1bXBEdXJhdGlv",
            "blR5cGVTZXR0aW5ncxILCgdEeW5hbWljEAASCgoGU3RhdGljEAEitQEKEkdh",
            "bWVwbGF5UGFyYW1ldGVycxIlCgdiZWF0bWFwGAEgASgLMhQucHJvdG8ubW9k",
            "ZWwuQmVhdG1hcBI8Cg9wbGF5ZXJfc2V0dGluZ3MYAiABKAsyIy5wcm90by5t",
            "b2RlbC5QbGF5ZXJTcGVjaWZpY1NldHRpbmdzEjoKEmdhbWVwbGF5X21vZGlm",
            "aWVycxgDIAEoCzIeLnByb3RvLm1vZGVsLkdhbWVwbGF5TW9kaWZpZXJzIiAK",
            "BFRlYW0SCgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCSKkAQoOU2VydmVyU2V0",
            "dGluZ3MSEwoLc2VydmVyX25hbWUYASABKAkSEAoIcGFzc3dvcmQYAiABKAkS",
            "FAoMZW5hYmxlX3RlYW1zGAMgASgIEiAKBXRlYW1zGAQgAygLMhEucHJvdG8u",
            "bW9kZWwuVGVhbRIeChZzY29yZV91cGRhdGVfZnJlcXVlbmN5GAUgASgFEhMK",
            "C2Jhbm5lZF9tb2RzGAYgAygJIjwKCFNvbmdMaXN0EjAKBmxldmVscxgBIAMo",
            "CzIgLnByb3RvLm1vZGVsLlByZXZpZXdCZWF0bWFwTGV2ZWwi2QQKBlBsYXll",
            "chIfCgR1c2VyGAEgASgLMhEucHJvdG8ubW9kZWwuVXNlchIPCgd1c2VyX2lk",
            "GAIgASgJEh8KBHRlYW0YAyABKAsyES5wcm90by5tb2RlbC5UZWFtEjIKCnBs",
            "YXlfc3RhdGUYBCABKA4yHi5wcm90by5tb2RlbC5QbGF5ZXIuUGxheVN0YXRl",
            "cxI6Cg5kb3dubG9hZF9zdGF0ZRgFIAEoDjIiLnByb3RvLm1vZGVsLlBsYXll",
            "ci5Eb3dubG9hZFN0YXRlcxINCgVzY29yZRgGIAEoBRINCgVjb21ibxgHIAEo",
            "BRIQCghhY2N1cmFjeRgIIAEoARIVCg1zb25nX3Bvc2l0aW9uGAkgASgBEigK",
            "CXNvbmdfbGlzdBgKIAEoCzIVLnByb3RvLm1vZGVsLlNvbmdMaXN0EhAKCG1v",
            "ZF9saXN0GAsgAygJEjwKGXN0cmVhbV9zY3JlZW5fY29vcmRpbmF0ZXMYDCAB",
            "KAsyGS5wcm90by5tb2RlbC5QbGF5ZXIuUG9pbnQSFwoPc3RyZWFtX2RlbGF5",
            "X21zGA0gASgDEhwKFHN0cmVhbV9zeW5jX3N0YXJ0X21zGA4gASgDGh0KBVBv",
            "aW50EgkKAXgYASABKAUSCQoBeRgCIAEoBSIlCgpQbGF5U3RhdGVzEgsKB1dh",
            "aXRpbmcQABIKCgZJbkdhbWUQASJOCg5Eb3dubG9hZFN0YXRlcxIICgROb25l",
            "EAASDwoLRG93bmxvYWRpbmcQARIOCgpEb3dubG9hZGVkEAISEQoNRG93bmxv",
            "YWRFcnJvchADIvMBCgVNYXRjaBIMCgRndWlkGAEgASgJEiQKB3BsYXllcnMY",
            "AiADKAsyEy5wcm90by5tb2RlbC5QbGF5ZXISIQoGbGVhZGVyGAMgASgLMhEu",
            "cHJvdG8ubW9kZWwuVXNlchI4Cg5zZWxlY3RlZF9sZXZlbBgFIAEoCzIgLnBy",
            "b3RvLm1vZGVsLlByZXZpZXdCZWF0bWFwTGV2ZWwSPAoXc2VsZWN0ZWRfY2hh",
            "cmFjdGVyaXN0aWMYBiABKAsyGy5wcm90by5tb2RlbC5DaGFyYWN0ZXJpc3Rp",
            "YxIbChNzZWxlY3RlZF9kaWZmaWN1bHR5GAcgASgFIuUCCg5RdWFsaWZpZXJF",
            "dmVudBIQCghldmVudF9pZBgBIAEoCRIMCgRuYW1lGAIgASgJEiMKBWd1aWxk",
            "GAMgASgLMhQucHJvdG8uZGlzY29yZC5HdWlsZBIsCgxpbmZvX2NoYW5uZWwY",
            "BCABKAsyFi5wcm90by5kaXNjb3JkLkNoYW5uZWwSNwoOcXVhbGlmaWVyX21h",
            "cHMYBSADKAsyHy5wcm90by5tb2RlbC5HYW1lcGxheVBhcmFtZXRlcnMSIwob",
            "c2VuZF9zY29yZXNfdG9faW5mb19jaGFubmVsGAYgASgIEg0KBWZsYWdzGAcg",
            "ASgFInMKDUV2ZW50U2V0dGluZ3MSCAoETm9uZRAAEhkKFUhpZGVTY29yZXNG",
            "cm9tUGxheWVycxABEh8KG0Rpc2FibGVTY29yZXNhYmVyU3VibWlzc2lvbhAC",
            "EhwKGEVuYWJsZUxlYWRlcmJvYXJkTWVzc2FnZRADIjkKCkNvcmVTZXJ2ZXIS",
            "DAoEbmFtZRgBIAEoCRIPCgdhZGRyZXNzGAIgASgJEgwKBHBvcnQYAyABKAUi",
            "kwIKBVN0YXRlEjQKD3NlcnZlcl9zZXR0aW5ncxgBIAEoCzIbLnByb3RvLm1v",
            "ZGVsLlNlcnZlclNldHRpbmdzEiQKB3BsYXllcnMYAiADKAsyEy5wcm90by5t",
            "b2RlbC5QbGF5ZXISLgoMY29vcmRpbmF0b3JzGAMgAygLMhgucHJvdG8ubW9k",
            "ZWwuQ29vcmRpbmF0b3ISIwoHbWF0Y2hlcxgEIAMoCzISLnByb3RvLm1vZGVs",
            "Lk1hdGNoEisKBmV2ZW50cxgFIAMoCzIbLnByb3RvLm1vZGVsLlF1YWxpZmll",
            "ckV2ZW50EiwKC2tub3duX2hvc3RzGAYgAygLMhcucHJvdG8ubW9kZWwuQ29y",
            "ZVNlcnZlciKjAQoFU2NvcmUSEAoIZXZlbnRfaWQYASABKAkSMwoKcGFyYW1l",
            "dGVycxgCIAEoCzIfLnByb3RvLm1vZGVsLkdhbWVwbGF5UGFyYW1ldGVycxIP",
            "Cgd1c2VyX2lkGAMgASgJEhAKCHVzZXJuYW1lGAQgASgJEg0KBXNjb3JlGAUg",
            "ASgFEhIKCmZ1bGxfY29tYm8YBiABKAgSDQoFY29sb3IYByABKAlCI6oCIFRv",
            "dXJuYW1lbnRBc3Npc3RhbnRTaGFyZWQuTW9kZWxzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::TournamentAssistantShared.Models.Discord.DiscordReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.Characteristic), global::TournamentAssistantShared.Models.Characteristic.Parser, new[]{ "SerializedName", "Difficulties" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.Beatmap), global::TournamentAssistantShared.Models.Beatmap.Parser, new[]{ "Name", "LevelId", "Characteristic", "Difficulty" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.PreviewBeatmapLevel), global::TournamentAssistantShared.Models.PreviewBeatmapLevel.Parser, new[]{ "LevelId", "Name", "Characteristics", "Loaded" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.User), global::TournamentAssistantShared.Models.User.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.Coordinator), global::TournamentAssistantShared.Models.Coordinator.Parser, new[]{ "User" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.GameplayModifiers), global::TournamentAssistantShared.Models.GameplayModifiers.Parser, new[]{ "Options" }, null, new[]{ typeof(global::TournamentAssistantShared.Models.GameplayModifiers.Types.GameOptions) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.PlayerSpecificSettings), global::TournamentAssistantShared.Models.PlayerSpecificSettings.Parser, new[]{ "PlayerHeight", "SfxVolume", "SaberTrailIntensity", "NoteJumpStartBeatOffset", "NoteJumpFixedDuration", "Options", "NoteJumpDurationTypeSettings" }, null, new[]{ typeof(global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.PlayerOptions), typeof(global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.NoteJumpDurationTypeSettings) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.GameplayParameters), global::TournamentAssistantShared.Models.GameplayParameters.Parser, new[]{ "Beatmap", "PlayerSettings", "GameplayModifiers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.Team), global::TournamentAssistantShared.Models.Team.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.ServerSettings), global::TournamentAssistantShared.Models.ServerSettings.Parser, new[]{ "ServerName", "Password", "EnableTeams", "Teams", "ScoreUpdateFrequency", "BannedMods" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.SongList), global::TournamentAssistantShared.Models.SongList.Parser, new[]{ "Levels" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.Player), global::TournamentAssistantShared.Models.Player.Parser, new[]{ "User", "UserId", "Team", "PlayState", "DownloadState", "Score", "Combo", "Accuracy", "SongPosition", "SongList", "ModList", "StreamScreenCoordinates", "StreamDelayMs", "StreamSyncStartMs" }, null, new[]{ typeof(global::TournamentAssistantShared.Models.Player.Types.PlayStates), typeof(global::TournamentAssistantShared.Models.Player.Types.DownloadStates) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.Player.Types.Point), global::TournamentAssistantShared.Models.Player.Types.Point.Parser, new[]{ "X", "Y" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.Match), global::TournamentAssistantShared.Models.Match.Parser, new[]{ "Guid", "Players", "Leader", "SelectedLevel", "SelectedCharacteristic", "SelectedDifficulty" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.QualifierEvent), global::TournamentAssistantShared.Models.QualifierEvent.Parser, new[]{ "EventId", "Name", "Guild", "InfoChannel", "QualifierMaps", "SendScoresToInfoChannel", "Flags" }, null, new[]{ typeof(global::TournamentAssistantShared.Models.QualifierEvent.Types.EventSettings) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.CoreServer), global::TournamentAssistantShared.Models.CoreServer.Parser, new[]{ "Name", "Address", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.State), global::TournamentAssistantShared.Models.State.Parser, new[]{ "ServerSettings", "Players", "Coordinators", "Matches", "Events", "KnownHosts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.Score), global::TournamentAssistantShared.Models.Score.Parser, new[]{ "EventId", "Parameters", "UserId", "Username", "Score_", "FullCombo", "Color" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Characteristic : pb::IMessage<Characteristic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Characteristic> _parser = new pb::MessageParser<Characteristic>(() => new Characteristic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Characteristic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Characteristic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Characteristic(Characteristic other) : this() {
      serializedName_ = other.serializedName_;
      difficulties_ = other.difficulties_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Characteristic Clone() {
      return new Characteristic(this);
    }

    /// <summary>Field number for the "serialized_name" field.</summary>
    public const int SerializedNameFieldNumber = 1;
    private string serializedName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SerializedName {
      get { return serializedName_; }
      set {
        serializedName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "difficulties" field.</summary>
    public const int DifficultiesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_difficulties_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> difficulties_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Difficulties {
      get { return difficulties_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Characteristic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Characteristic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SerializedName != other.SerializedName) return false;
      if(!difficulties_.Equals(other.difficulties_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SerializedName.Length != 0) hash ^= SerializedName.GetHashCode();
      hash ^= difficulties_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SerializedName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SerializedName);
      }
      difficulties_.WriteTo(output, _repeated_difficulties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SerializedName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SerializedName);
      }
      difficulties_.WriteTo(ref output, _repeated_difficulties_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SerializedName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SerializedName);
      }
      size += difficulties_.CalculateSize(_repeated_difficulties_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Characteristic other) {
      if (other == null) {
        return;
      }
      if (other.SerializedName.Length != 0) {
        SerializedName = other.SerializedName;
      }
      difficulties_.Add(other.difficulties_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SerializedName = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            difficulties_.AddEntriesFrom(input, _repeated_difficulties_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SerializedName = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            difficulties_.AddEntriesFrom(ref input, _repeated_difficulties_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Beatmap : pb::IMessage<Beatmap>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Beatmap> _parser = new pb::MessageParser<Beatmap>(() => new Beatmap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Beatmap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Beatmap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Beatmap(Beatmap other) : this() {
      name_ = other.name_;
      levelId_ = other.levelId_;
      characteristic_ = other.characteristic_ != null ? other.characteristic_.Clone() : null;
      difficulty_ = other.difficulty_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Beatmap Clone() {
      return new Beatmap(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level_id" field.</summary>
    public const int LevelIdFieldNumber = 2;
    private string levelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LevelId {
      get { return levelId_; }
      set {
        levelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "characteristic" field.</summary>
    public const int CharacteristicFieldNumber = 3;
    private global::TournamentAssistantShared.Models.Characteristic characteristic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.Characteristic Characteristic {
      get { return characteristic_; }
      set {
        characteristic_ = value;
      }
    }

    /// <summary>Field number for the "difficulty" field.</summary>
    public const int DifficultyFieldNumber = 4;
    private int difficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Difficulty {
      get { return difficulty_; }
      set {
        difficulty_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Beatmap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Beatmap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (LevelId != other.LevelId) return false;
      if (!object.Equals(Characteristic, other.Characteristic)) return false;
      if (Difficulty != other.Difficulty) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (LevelId.Length != 0) hash ^= LevelId.GetHashCode();
      if (characteristic_ != null) hash ^= Characteristic.GetHashCode();
      if (Difficulty != 0) hash ^= Difficulty.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (LevelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LevelId);
      }
      if (characteristic_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Characteristic);
      }
      if (Difficulty != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Difficulty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (LevelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LevelId);
      }
      if (characteristic_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Characteristic);
      }
      if (Difficulty != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Difficulty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (LevelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LevelId);
      }
      if (characteristic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Characteristic);
      }
      if (Difficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Difficulty);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Beatmap other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.LevelId.Length != 0) {
        LevelId = other.LevelId;
      }
      if (other.characteristic_ != null) {
        if (characteristic_ == null) {
          Characteristic = new global::TournamentAssistantShared.Models.Characteristic();
        }
        Characteristic.MergeFrom(other.Characteristic);
      }
      if (other.Difficulty != 0) {
        Difficulty = other.Difficulty;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            LevelId = input.ReadString();
            break;
          }
          case 26: {
            if (characteristic_ == null) {
              Characteristic = new global::TournamentAssistantShared.Models.Characteristic();
            }
            input.ReadMessage(Characteristic);
            break;
          }
          case 32: {
            Difficulty = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            LevelId = input.ReadString();
            break;
          }
          case 26: {
            if (characteristic_ == null) {
              Characteristic = new global::TournamentAssistantShared.Models.Characteristic();
            }
            input.ReadMessage(Characteristic);
            break;
          }
          case 32: {
            Difficulty = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PreviewBeatmapLevel : pb::IMessage<PreviewBeatmapLevel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PreviewBeatmapLevel> _parser = new pb::MessageParser<PreviewBeatmapLevel>(() => new PreviewBeatmapLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PreviewBeatmapLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreviewBeatmapLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreviewBeatmapLevel(PreviewBeatmapLevel other) : this() {
      levelId_ = other.levelId_;
      name_ = other.name_;
      characteristics_ = other.characteristics_.Clone();
      loaded_ = other.loaded_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PreviewBeatmapLevel Clone() {
      return new PreviewBeatmapLevel(this);
    }

    /// <summary>Field number for the "level_id" field.</summary>
    public const int LevelIdFieldNumber = 1;
    private string levelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LevelId {
      get { return levelId_; }
      set {
        levelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "characteristics" field.</summary>
    public const int CharacteristicsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TournamentAssistantShared.Models.Characteristic> _repeated_characteristics_codec
        = pb::FieldCodec.ForMessage(26, global::TournamentAssistantShared.Models.Characteristic.Parser);
    private readonly pbc::RepeatedField<global::TournamentAssistantShared.Models.Characteristic> characteristics_ = new pbc::RepeatedField<global::TournamentAssistantShared.Models.Characteristic>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TournamentAssistantShared.Models.Characteristic> Characteristics {
      get { return characteristics_; }
    }

    /// <summary>Field number for the "loaded" field.</summary>
    public const int LoadedFieldNumber = 4;
    private bool loaded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Loaded {
      get { return loaded_; }
      set {
        loaded_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PreviewBeatmapLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PreviewBeatmapLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LevelId != other.LevelId) return false;
      if (Name != other.Name) return false;
      if(!characteristics_.Equals(other.characteristics_)) return false;
      if (Loaded != other.Loaded) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LevelId.Length != 0) hash ^= LevelId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= characteristics_.GetHashCode();
      if (Loaded != false) hash ^= Loaded.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LevelId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LevelId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      characteristics_.WriteTo(output, _repeated_characteristics_codec);
      if (Loaded != false) {
        output.WriteRawTag(32);
        output.WriteBool(Loaded);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LevelId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LevelId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      characteristics_.WriteTo(ref output, _repeated_characteristics_codec);
      if (Loaded != false) {
        output.WriteRawTag(32);
        output.WriteBool(Loaded);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LevelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LevelId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += characteristics_.CalculateSize(_repeated_characteristics_codec);
      if (Loaded != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PreviewBeatmapLevel other) {
      if (other == null) {
        return;
      }
      if (other.LevelId.Length != 0) {
        LevelId = other.LevelId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      characteristics_.Add(other.characteristics_);
      if (other.Loaded != false) {
        Loaded = other.Loaded;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LevelId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            characteristics_.AddEntriesFrom(input, _repeated_characteristics_codec);
            break;
          }
          case 32: {
            Loaded = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LevelId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            characteristics_.AddEntriesFrom(ref input, _repeated_characteristics_codec);
            break;
          }
          case 32: {
            Loaded = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class User : pb::IMessage<User>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public User(User other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Coordinator : pb::IMessage<Coordinator>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Coordinator> _parser = new pb::MessageParser<Coordinator>(() => new Coordinator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Coordinator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Coordinator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Coordinator(Coordinator other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Coordinator Clone() {
      return new Coordinator(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::TournamentAssistantShared.Models.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Coordinator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Coordinator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Coordinator other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::TournamentAssistantShared.Models.User();
        }
        User.MergeFrom(other.User);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::TournamentAssistantShared.Models.User();
            }
            input.ReadMessage(User);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::TournamentAssistantShared.Models.User();
            }
            input.ReadMessage(User);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameplayModifiers : pb::IMessage<GameplayModifiers>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameplayModifiers> _parser = new pb::MessageParser<GameplayModifiers>(() => new GameplayModifiers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameplayModifiers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameplayModifiers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameplayModifiers(GameplayModifiers other) : this() {
      options_ = other.options_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameplayModifiers Clone() {
      return new GameplayModifiers(this);
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 1;
    private global::TournamentAssistantShared.Models.GameplayModifiers.Types.GameOptions options_ = global::TournamentAssistantShared.Models.GameplayModifiers.Types.GameOptions.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.GameplayModifiers.Types.GameOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameplayModifiers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameplayModifiers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Options != other.Options) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Options != global::TournamentAssistantShared.Models.GameplayModifiers.Types.GameOptions.None) hash ^= Options.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Options != global::TournamentAssistantShared.Models.GameplayModifiers.Types.GameOptions.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Options != global::TournamentAssistantShared.Models.GameplayModifiers.Types.GameOptions.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Options);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Options != global::TournamentAssistantShared.Models.GameplayModifiers.Types.GameOptions.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Options);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameplayModifiers other) {
      if (other == null) {
        return;
      }
      if (other.Options != global::TournamentAssistantShared.Models.GameplayModifiers.Types.GameOptions.None) {
        Options = other.Options;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Options = (global::TournamentAssistantShared.Models.GameplayModifiers.Types.GameOptions) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Options = (global::TournamentAssistantShared.Models.GameplayModifiers.Types.GameOptions) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GameplayModifiers message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum GameOptions {
        [pbr::OriginalName("None")] None = 0,
        /// <summary>
        ///Negative modifiers
        /// </summary>
        [pbr::OriginalName("NoFail")] NoFail = 1,
        [pbr::OriginalName("NoBombs")] NoBombs = 2,
        [pbr::OriginalName("NoArrows")] NoArrows = 4,
        [pbr::OriginalName("NoObstacles")] NoObstacles = 8,
        [pbr::OriginalName("SlowSong")] SlowSong = 16,
        /// <summary>
        ///Positive Modifiers
        /// </summary>
        [pbr::OriginalName("InstaFail")] InstaFail = 32,
        [pbr::OriginalName("FailOnClash")] FailOnClash = 64,
        [pbr::OriginalName("BatteryEnergy")] BatteryEnergy = 128,
        [pbr::OriginalName("FastNotes")] FastNotes = 256,
        [pbr::OriginalName("FastSong")] FastSong = 512,
        [pbr::OriginalName("DisappearingArrows")] DisappearingArrows = 1024,
        [pbr::OriginalName("GhostNotes")] GhostNotes = 2048,
        /// <summary>
        ///1.12.2 Additions
        /// </summary>
        [pbr::OriginalName("DemoNoFail")] DemoNoFail = 4096,
        [pbr::OriginalName("DemoNoObstacles")] DemoNoObstacles = 8192,
        [pbr::OriginalName("StrictAngles")] StrictAngles = 16384,
        /// <summary>
        ///1.13.4 Additions
        /// </summary>
        [pbr::OriginalName("ProMode")] ProMode = 32768,
        [pbr::OriginalName("ZenMode")] ZenMode = 65536,
        [pbr::OriginalName("SmallCubes")] SmallCubes = 131072,
        [pbr::OriginalName("SuperFastSong")] SuperFastSong = 262144,
      }

    }
    #endregion

  }

  public sealed partial class PlayerSpecificSettings : pb::IMessage<PlayerSpecificSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerSpecificSettings> _parser = new pb::MessageParser<PlayerSpecificSettings>(() => new PlayerSpecificSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerSpecificSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerSpecificSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerSpecificSettings(PlayerSpecificSettings other) : this() {
      playerHeight_ = other.playerHeight_;
      sfxVolume_ = other.sfxVolume_;
      saberTrailIntensity_ = other.saberTrailIntensity_;
      noteJumpStartBeatOffset_ = other.noteJumpStartBeatOffset_;
      noteJumpFixedDuration_ = other.noteJumpFixedDuration_;
      options_ = other.options_;
      noteJumpDurationTypeSettings_ = other.noteJumpDurationTypeSettings_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerSpecificSettings Clone() {
      return new PlayerSpecificSettings(this);
    }

    /// <summary>Field number for the "player_height" field.</summary>
    public const int PlayerHeightFieldNumber = 1;
    private float playerHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float PlayerHeight {
      get { return playerHeight_; }
      set {
        playerHeight_ = value;
      }
    }

    /// <summary>Field number for the "sfx_volume" field.</summary>
    public const int SfxVolumeFieldNumber = 2;
    private float sfxVolume_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SfxVolume {
      get { return sfxVolume_; }
      set {
        sfxVolume_ = value;
      }
    }

    /// <summary>Field number for the "saber_trail_intensity" field.</summary>
    public const int SaberTrailIntensityFieldNumber = 3;
    private float saberTrailIntensity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SaberTrailIntensity {
      get { return saberTrailIntensity_; }
      set {
        saberTrailIntensity_ = value;
      }
    }

    /// <summary>Field number for the "note_jump_start_beat_offset" field.</summary>
    public const int NoteJumpStartBeatOffsetFieldNumber = 4;
    private float noteJumpStartBeatOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NoteJumpStartBeatOffset {
      get { return noteJumpStartBeatOffset_; }
      set {
        noteJumpStartBeatOffset_ = value;
      }
    }

    /// <summary>Field number for the "note_jump_fixed_duration" field.</summary>
    public const int NoteJumpFixedDurationFieldNumber = 5;
    private float noteJumpFixedDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NoteJumpFixedDuration {
      get { return noteJumpFixedDuration_; }
      set {
        noteJumpFixedDuration_ = value;
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 6;
    private global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.PlayerOptions options_ = global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.PlayerOptions.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.PlayerOptions Options {
      get { return options_; }
      set {
        options_ = value;
      }
    }

    /// <summary>Field number for the "note_jump_duration_type_settings" field.</summary>
    public const int NoteJumpDurationTypeSettingsFieldNumber = 7;
    private global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.NoteJumpDurationTypeSettings noteJumpDurationTypeSettings_ = global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.NoteJumpDurationTypeSettings.Dynamic;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.NoteJumpDurationTypeSettings NoteJumpDurationTypeSettings {
      get { return noteJumpDurationTypeSettings_; }
      set {
        noteJumpDurationTypeSettings_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerSpecificSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerSpecificSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PlayerHeight, other.PlayerHeight)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SfxVolume, other.SfxVolume)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SaberTrailIntensity, other.SaberTrailIntensity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NoteJumpStartBeatOffset, other.NoteJumpStartBeatOffset)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NoteJumpFixedDuration, other.NoteJumpFixedDuration)) return false;
      if (Options != other.Options) return false;
      if (NoteJumpDurationTypeSettings != other.NoteJumpDurationTypeSettings) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerHeight != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PlayerHeight);
      if (SfxVolume != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SfxVolume);
      if (SaberTrailIntensity != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SaberTrailIntensity);
      if (NoteJumpStartBeatOffset != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NoteJumpStartBeatOffset);
      if (NoteJumpFixedDuration != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NoteJumpFixedDuration);
      if (Options != global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.PlayerOptions.None) hash ^= Options.GetHashCode();
      if (NoteJumpDurationTypeSettings != global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.NoteJumpDurationTypeSettings.Dynamic) hash ^= NoteJumpDurationTypeSettings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerHeight != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(PlayerHeight);
      }
      if (SfxVolume != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(SfxVolume);
      }
      if (SaberTrailIntensity != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(SaberTrailIntensity);
      }
      if (NoteJumpStartBeatOffset != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(NoteJumpStartBeatOffset);
      }
      if (NoteJumpFixedDuration != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(NoteJumpFixedDuration);
      }
      if (Options != global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.PlayerOptions.None) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Options);
      }
      if (NoteJumpDurationTypeSettings != global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.NoteJumpDurationTypeSettings.Dynamic) {
        output.WriteRawTag(56);
        output.WriteEnum((int) NoteJumpDurationTypeSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerHeight != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(PlayerHeight);
      }
      if (SfxVolume != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(SfxVolume);
      }
      if (SaberTrailIntensity != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(SaberTrailIntensity);
      }
      if (NoteJumpStartBeatOffset != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(NoteJumpStartBeatOffset);
      }
      if (NoteJumpFixedDuration != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(NoteJumpFixedDuration);
      }
      if (Options != global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.PlayerOptions.None) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Options);
      }
      if (NoteJumpDurationTypeSettings != global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.NoteJumpDurationTypeSettings.Dynamic) {
        output.WriteRawTag(56);
        output.WriteEnum((int) NoteJumpDurationTypeSettings);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayerHeight != 0F) {
        size += 1 + 4;
      }
      if (SfxVolume != 0F) {
        size += 1 + 4;
      }
      if (SaberTrailIntensity != 0F) {
        size += 1 + 4;
      }
      if (NoteJumpStartBeatOffset != 0F) {
        size += 1 + 4;
      }
      if (NoteJumpFixedDuration != 0F) {
        size += 1 + 4;
      }
      if (Options != global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.PlayerOptions.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Options);
      }
      if (NoteJumpDurationTypeSettings != global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.NoteJumpDurationTypeSettings.Dynamic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NoteJumpDurationTypeSettings);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerSpecificSettings other) {
      if (other == null) {
        return;
      }
      if (other.PlayerHeight != 0F) {
        PlayerHeight = other.PlayerHeight;
      }
      if (other.SfxVolume != 0F) {
        SfxVolume = other.SfxVolume;
      }
      if (other.SaberTrailIntensity != 0F) {
        SaberTrailIntensity = other.SaberTrailIntensity;
      }
      if (other.NoteJumpStartBeatOffset != 0F) {
        NoteJumpStartBeatOffset = other.NoteJumpStartBeatOffset;
      }
      if (other.NoteJumpFixedDuration != 0F) {
        NoteJumpFixedDuration = other.NoteJumpFixedDuration;
      }
      if (other.Options != global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.PlayerOptions.None) {
        Options = other.Options;
      }
      if (other.NoteJumpDurationTypeSettings != global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.NoteJumpDurationTypeSettings.Dynamic) {
        NoteJumpDurationTypeSettings = other.NoteJumpDurationTypeSettings;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            PlayerHeight = input.ReadFloat();
            break;
          }
          case 21: {
            SfxVolume = input.ReadFloat();
            break;
          }
          case 29: {
            SaberTrailIntensity = input.ReadFloat();
            break;
          }
          case 37: {
            NoteJumpStartBeatOffset = input.ReadFloat();
            break;
          }
          case 45: {
            NoteJumpFixedDuration = input.ReadFloat();
            break;
          }
          case 48: {
            Options = (global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.PlayerOptions) input.ReadEnum();
            break;
          }
          case 56: {
            NoteJumpDurationTypeSettings = (global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.NoteJumpDurationTypeSettings) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            PlayerHeight = input.ReadFloat();
            break;
          }
          case 21: {
            SfxVolume = input.ReadFloat();
            break;
          }
          case 29: {
            SaberTrailIntensity = input.ReadFloat();
            break;
          }
          case 37: {
            NoteJumpStartBeatOffset = input.ReadFloat();
            break;
          }
          case 45: {
            NoteJumpFixedDuration = input.ReadFloat();
            break;
          }
          case 48: {
            Options = (global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.PlayerOptions) input.ReadEnum();
            break;
          }
          case 56: {
            NoteJumpDurationTypeSettings = (global::TournamentAssistantShared.Models.PlayerSpecificSettings.Types.NoteJumpDurationTypeSettings) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PlayerSpecificSettings message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum PlayerOptions {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("LeftHanded")] LeftHanded = 1,
        [pbr::OriginalName("StaticLights")] StaticLights = 2,
        [pbr::OriginalName("NoHud")] NoHud = 4,
        [pbr::OriginalName("AdvancedHud")] AdvancedHud = 8,
        [pbr::OriginalName("ReduceDebris")] ReduceDebris = 16,
        [pbr::OriginalName("AutoPlayerHeight")] AutoPlayerHeight = 32,
        [pbr::OriginalName("NoFailEffects")] NoFailEffects = 64,
        [pbr::OriginalName("AutoRestart")] AutoRestart = 128,
        [pbr::OriginalName("HideNoteSpawnEffect")] HideNoteSpawnEffect = 256,
        [pbr::OriginalName("AdaptiveSfx")] AdaptiveSfx = 512,
      }

      public enum NoteJumpDurationTypeSettings {
        [pbr::OriginalName("Dynamic")] Dynamic = 0,
        [pbr::OriginalName("Static")] Static = 1,
      }

    }
    #endregion

  }

  public sealed partial class GameplayParameters : pb::IMessage<GameplayParameters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameplayParameters> _parser = new pb::MessageParser<GameplayParameters>(() => new GameplayParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameplayParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameplayParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameplayParameters(GameplayParameters other) : this() {
      beatmap_ = other.beatmap_ != null ? other.beatmap_.Clone() : null;
      playerSettings_ = other.playerSettings_ != null ? other.playerSettings_.Clone() : null;
      gameplayModifiers_ = other.gameplayModifiers_ != null ? other.gameplayModifiers_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameplayParameters Clone() {
      return new GameplayParameters(this);
    }

    /// <summary>Field number for the "beatmap" field.</summary>
    public const int BeatmapFieldNumber = 1;
    private global::TournamentAssistantShared.Models.Beatmap beatmap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.Beatmap Beatmap {
      get { return beatmap_; }
      set {
        beatmap_ = value;
      }
    }

    /// <summary>Field number for the "player_settings" field.</summary>
    public const int PlayerSettingsFieldNumber = 2;
    private global::TournamentAssistantShared.Models.PlayerSpecificSettings playerSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.PlayerSpecificSettings PlayerSettings {
      get { return playerSettings_; }
      set {
        playerSettings_ = value;
      }
    }

    /// <summary>Field number for the "gameplay_modifiers" field.</summary>
    public const int GameplayModifiersFieldNumber = 3;
    private global::TournamentAssistantShared.Models.GameplayModifiers gameplayModifiers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.GameplayModifiers GameplayModifiers {
      get { return gameplayModifiers_; }
      set {
        gameplayModifiers_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameplayParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameplayParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Beatmap, other.Beatmap)) return false;
      if (!object.Equals(PlayerSettings, other.PlayerSettings)) return false;
      if (!object.Equals(GameplayModifiers, other.GameplayModifiers)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (beatmap_ != null) hash ^= Beatmap.GetHashCode();
      if (playerSettings_ != null) hash ^= PlayerSettings.GetHashCode();
      if (gameplayModifiers_ != null) hash ^= GameplayModifiers.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (beatmap_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Beatmap);
      }
      if (playerSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerSettings);
      }
      if (gameplayModifiers_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GameplayModifiers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (beatmap_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Beatmap);
      }
      if (playerSettings_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerSettings);
      }
      if (gameplayModifiers_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GameplayModifiers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (beatmap_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Beatmap);
      }
      if (playerSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerSettings);
      }
      if (gameplayModifiers_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameplayModifiers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameplayParameters other) {
      if (other == null) {
        return;
      }
      if (other.beatmap_ != null) {
        if (beatmap_ == null) {
          Beatmap = new global::TournamentAssistantShared.Models.Beatmap();
        }
        Beatmap.MergeFrom(other.Beatmap);
      }
      if (other.playerSettings_ != null) {
        if (playerSettings_ == null) {
          PlayerSettings = new global::TournamentAssistantShared.Models.PlayerSpecificSettings();
        }
        PlayerSettings.MergeFrom(other.PlayerSettings);
      }
      if (other.gameplayModifiers_ != null) {
        if (gameplayModifiers_ == null) {
          GameplayModifiers = new global::TournamentAssistantShared.Models.GameplayModifiers();
        }
        GameplayModifiers.MergeFrom(other.GameplayModifiers);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (beatmap_ == null) {
              Beatmap = new global::TournamentAssistantShared.Models.Beatmap();
            }
            input.ReadMessage(Beatmap);
            break;
          }
          case 18: {
            if (playerSettings_ == null) {
              PlayerSettings = new global::TournamentAssistantShared.Models.PlayerSpecificSettings();
            }
            input.ReadMessage(PlayerSettings);
            break;
          }
          case 26: {
            if (gameplayModifiers_ == null) {
              GameplayModifiers = new global::TournamentAssistantShared.Models.GameplayModifiers();
            }
            input.ReadMessage(GameplayModifiers);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (beatmap_ == null) {
              Beatmap = new global::TournamentAssistantShared.Models.Beatmap();
            }
            input.ReadMessage(Beatmap);
            break;
          }
          case 18: {
            if (playerSettings_ == null) {
              PlayerSettings = new global::TournamentAssistantShared.Models.PlayerSpecificSettings();
            }
            input.ReadMessage(PlayerSettings);
            break;
          }
          case 26: {
            if (gameplayModifiers_ == null) {
              GameplayModifiers = new global::TournamentAssistantShared.Models.GameplayModifiers();
            }
            input.ReadMessage(GameplayModifiers);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Team : pb::IMessage<Team>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Team> _parser = new pb::MessageParser<Team>(() => new Team());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Team> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Team() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Team(Team other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Team Clone() {
      return new Team(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Team);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Team other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Team other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ServerSettings : pb::IMessage<ServerSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerSettings> _parser = new pb::MessageParser<ServerSettings>(() => new ServerSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServerSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerSettings(ServerSettings other) : this() {
      serverName_ = other.serverName_;
      password_ = other.password_;
      enableTeams_ = other.enableTeams_;
      teams_ = other.teams_.Clone();
      scoreUpdateFrequency_ = other.scoreUpdateFrequency_;
      bannedMods_ = other.bannedMods_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerSettings Clone() {
      return new ServerSettings(this);
    }

    /// <summary>Field number for the "server_name" field.</summary>
    public const int ServerNameFieldNumber = 1;
    private string serverName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServerName {
      get { return serverName_; }
      set {
        serverName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enable_teams" field.</summary>
    public const int EnableTeamsFieldNumber = 3;
    private bool enableTeams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableTeams {
      get { return enableTeams_; }
      set {
        enableTeams_ = value;
      }
    }

    /// <summary>Field number for the "teams" field.</summary>
    public const int TeamsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TournamentAssistantShared.Models.Team> _repeated_teams_codec
        = pb::FieldCodec.ForMessage(34, global::TournamentAssistantShared.Models.Team.Parser);
    private readonly pbc::RepeatedField<global::TournamentAssistantShared.Models.Team> teams_ = new pbc::RepeatedField<global::TournamentAssistantShared.Models.Team>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TournamentAssistantShared.Models.Team> Teams {
      get { return teams_; }
    }

    /// <summary>Field number for the "score_update_frequency" field.</summary>
    public const int ScoreUpdateFrequencyFieldNumber = 5;
    private int scoreUpdateFrequency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ScoreUpdateFrequency {
      get { return scoreUpdateFrequency_; }
      set {
        scoreUpdateFrequency_ = value;
      }
    }

    /// <summary>Field number for the "banned_mods" field.</summary>
    public const int BannedModsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_bannedMods_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> bannedMods_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> BannedMods {
      get { return bannedMods_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServerSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServerSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServerName != other.ServerName) return false;
      if (Password != other.Password) return false;
      if (EnableTeams != other.EnableTeams) return false;
      if(!teams_.Equals(other.teams_)) return false;
      if (ScoreUpdateFrequency != other.ScoreUpdateFrequency) return false;
      if(!bannedMods_.Equals(other.bannedMods_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ServerName.Length != 0) hash ^= ServerName.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (EnableTeams != false) hash ^= EnableTeams.GetHashCode();
      hash ^= teams_.GetHashCode();
      if (ScoreUpdateFrequency != 0) hash ^= ScoreUpdateFrequency.GetHashCode();
      hash ^= bannedMods_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ServerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServerName);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (EnableTeams != false) {
        output.WriteRawTag(24);
        output.WriteBool(EnableTeams);
      }
      teams_.WriteTo(output, _repeated_teams_codec);
      if (ScoreUpdateFrequency != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ScoreUpdateFrequency);
      }
      bannedMods_.WriteTo(output, _repeated_bannedMods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ServerName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServerName);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (EnableTeams != false) {
        output.WriteRawTag(24);
        output.WriteBool(EnableTeams);
      }
      teams_.WriteTo(ref output, _repeated_teams_codec);
      if (ScoreUpdateFrequency != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ScoreUpdateFrequency);
      }
      bannedMods_.WriteTo(ref output, _repeated_bannedMods_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ServerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerName);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (EnableTeams != false) {
        size += 1 + 1;
      }
      size += teams_.CalculateSize(_repeated_teams_codec);
      if (ScoreUpdateFrequency != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScoreUpdateFrequency);
      }
      size += bannedMods_.CalculateSize(_repeated_bannedMods_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServerSettings other) {
      if (other == null) {
        return;
      }
      if (other.ServerName.Length != 0) {
        ServerName = other.ServerName;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.EnableTeams != false) {
        EnableTeams = other.EnableTeams;
      }
      teams_.Add(other.teams_);
      if (other.ScoreUpdateFrequency != 0) {
        ScoreUpdateFrequency = other.ScoreUpdateFrequency;
      }
      bannedMods_.Add(other.bannedMods_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServerName = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            EnableTeams = input.ReadBool();
            break;
          }
          case 34: {
            teams_.AddEntriesFrom(input, _repeated_teams_codec);
            break;
          }
          case 40: {
            ScoreUpdateFrequency = input.ReadInt32();
            break;
          }
          case 50: {
            bannedMods_.AddEntriesFrom(input, _repeated_bannedMods_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ServerName = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            EnableTeams = input.ReadBool();
            break;
          }
          case 34: {
            teams_.AddEntriesFrom(ref input, _repeated_teams_codec);
            break;
          }
          case 40: {
            ScoreUpdateFrequency = input.ReadInt32();
            break;
          }
          case 50: {
            bannedMods_.AddEntriesFrom(ref input, _repeated_bannedMods_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SongList : pb::IMessage<SongList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SongList> _parser = new pb::MessageParser<SongList>(() => new SongList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SongList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SongList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SongList(SongList other) : this() {
      levels_ = other.levels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SongList Clone() {
      return new SongList(this);
    }

    /// <summary>Field number for the "levels" field.</summary>
    public const int LevelsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TournamentAssistantShared.Models.PreviewBeatmapLevel> _repeated_levels_codec
        = pb::FieldCodec.ForMessage(10, global::TournamentAssistantShared.Models.PreviewBeatmapLevel.Parser);
    private readonly pbc::RepeatedField<global::TournamentAssistantShared.Models.PreviewBeatmapLevel> levels_ = new pbc::RepeatedField<global::TournamentAssistantShared.Models.PreviewBeatmapLevel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TournamentAssistantShared.Models.PreviewBeatmapLevel> Levels {
      get { return levels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SongList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SongList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!levels_.Equals(other.levels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= levels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      levels_.WriteTo(output, _repeated_levels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      levels_.WriteTo(ref output, _repeated_levels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += levels_.CalculateSize(_repeated_levels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SongList other) {
      if (other == null) {
        return;
      }
      levels_.Add(other.levels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            levels_.AddEntriesFrom(input, _repeated_levels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            levels_.AddEntriesFrom(ref input, _repeated_levels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Player : pb::IMessage<Player>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Player> _parser = new pb::MessageParser<Player>(() => new Player());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Player> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Player() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Player(Player other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      userId_ = other.userId_;
      team_ = other.team_ != null ? other.team_.Clone() : null;
      playState_ = other.playState_;
      downloadState_ = other.downloadState_;
      score_ = other.score_;
      combo_ = other.combo_;
      accuracy_ = other.accuracy_;
      songPosition_ = other.songPosition_;
      songList_ = other.songList_ != null ? other.songList_.Clone() : null;
      modList_ = other.modList_.Clone();
      streamScreenCoordinates_ = other.streamScreenCoordinates_ != null ? other.streamScreenCoordinates_.Clone() : null;
      streamDelayMs_ = other.streamDelayMs_;
      streamSyncStartMs_ = other.streamSyncStartMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Player Clone() {
      return new Player(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::TournamentAssistantShared.Models.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 3;
    private global::TournamentAssistantShared.Models.Team team_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.Team Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    /// <summary>Field number for the "play_state" field.</summary>
    public const int PlayStateFieldNumber = 4;
    private global::TournamentAssistantShared.Models.Player.Types.PlayStates playState_ = global::TournamentAssistantShared.Models.Player.Types.PlayStates.Waiting;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.Player.Types.PlayStates PlayState {
      get { return playState_; }
      set {
        playState_ = value;
      }
    }

    /// <summary>Field number for the "download_state" field.</summary>
    public const int DownloadStateFieldNumber = 5;
    private global::TournamentAssistantShared.Models.Player.Types.DownloadStates downloadState_ = global::TournamentAssistantShared.Models.Player.Types.DownloadStates.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.Player.Types.DownloadStates DownloadState {
      get { return downloadState_; }
      set {
        downloadState_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 6;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "combo" field.</summary>
    public const int ComboFieldNumber = 7;
    private int combo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Combo {
      get { return combo_; }
      set {
        combo_ = value;
      }
    }

    /// <summary>Field number for the "accuracy" field.</summary>
    public const int AccuracyFieldNumber = 8;
    private double accuracy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Accuracy {
      get { return accuracy_; }
      set {
        accuracy_ = value;
      }
    }

    /// <summary>Field number for the "song_position" field.</summary>
    public const int SongPositionFieldNumber = 9;
    private double songPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SongPosition {
      get { return songPosition_; }
      set {
        songPosition_ = value;
      }
    }

    /// <summary>Field number for the "song_list" field.</summary>
    public const int SongListFieldNumber = 10;
    private global::TournamentAssistantShared.Models.SongList songList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.SongList SongList {
      get { return songList_; }
      set {
        songList_ = value;
      }
    }

    /// <summary>Field number for the "mod_list" field.</summary>
    public const int ModListFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _repeated_modList_codec
        = pb::FieldCodec.ForString(90);
    private readonly pbc::RepeatedField<string> modList_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ModList {
      get { return modList_; }
    }

    /// <summary>Field number for the "stream_screen_coordinates" field.</summary>
    public const int StreamScreenCoordinatesFieldNumber = 12;
    private global::TournamentAssistantShared.Models.Player.Types.Point streamScreenCoordinates_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.Player.Types.Point StreamScreenCoordinates {
      get { return streamScreenCoordinates_; }
      set {
        streamScreenCoordinates_ = value;
      }
    }

    /// <summary>Field number for the "stream_delay_ms" field.</summary>
    public const int StreamDelayMsFieldNumber = 13;
    private long streamDelayMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StreamDelayMs {
      get { return streamDelayMs_; }
      set {
        streamDelayMs_ = value;
      }
    }

    /// <summary>Field number for the "stream_sync_start_ms" field.</summary>
    public const int StreamSyncStartMsFieldNumber = 14;
    private long streamSyncStartMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StreamSyncStartMs {
      get { return streamSyncStartMs_; }
      set {
        streamSyncStartMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Player);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Player other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (UserId != other.UserId) return false;
      if (!object.Equals(Team, other.Team)) return false;
      if (PlayState != other.PlayState) return false;
      if (DownloadState != other.DownloadState) return false;
      if (Score != other.Score) return false;
      if (Combo != other.Combo) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Accuracy, other.Accuracy)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SongPosition, other.SongPosition)) return false;
      if (!object.Equals(SongList, other.SongList)) return false;
      if(!modList_.Equals(other.modList_)) return false;
      if (!object.Equals(StreamScreenCoordinates, other.StreamScreenCoordinates)) return false;
      if (StreamDelayMs != other.StreamDelayMs) return false;
      if (StreamSyncStartMs != other.StreamSyncStartMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (team_ != null) hash ^= Team.GetHashCode();
      if (PlayState != global::TournamentAssistantShared.Models.Player.Types.PlayStates.Waiting) hash ^= PlayState.GetHashCode();
      if (DownloadState != global::TournamentAssistantShared.Models.Player.Types.DownloadStates.None) hash ^= DownloadState.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (Combo != 0) hash ^= Combo.GetHashCode();
      if (Accuracy != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Accuracy);
      if (SongPosition != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SongPosition);
      if (songList_ != null) hash ^= SongList.GetHashCode();
      hash ^= modList_.GetHashCode();
      if (streamScreenCoordinates_ != null) hash ^= StreamScreenCoordinates.GetHashCode();
      if (StreamDelayMs != 0L) hash ^= StreamDelayMs.GetHashCode();
      if (StreamSyncStartMs != 0L) hash ^= StreamSyncStartMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (team_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Team);
      }
      if (PlayState != global::TournamentAssistantShared.Models.Player.Types.PlayStates.Waiting) {
        output.WriteRawTag(32);
        output.WriteEnum((int) PlayState);
      }
      if (DownloadState != global::TournamentAssistantShared.Models.Player.Types.DownloadStates.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) DownloadState);
      }
      if (Score != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Score);
      }
      if (Combo != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Combo);
      }
      if (Accuracy != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Accuracy);
      }
      if (SongPosition != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(SongPosition);
      }
      if (songList_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SongList);
      }
      modList_.WriteTo(output, _repeated_modList_codec);
      if (streamScreenCoordinates_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(StreamScreenCoordinates);
      }
      if (StreamDelayMs != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(StreamDelayMs);
      }
      if (StreamSyncStartMs != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(StreamSyncStartMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (team_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Team);
      }
      if (PlayState != global::TournamentAssistantShared.Models.Player.Types.PlayStates.Waiting) {
        output.WriteRawTag(32);
        output.WriteEnum((int) PlayState);
      }
      if (DownloadState != global::TournamentAssistantShared.Models.Player.Types.DownloadStates.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) DownloadState);
      }
      if (Score != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Score);
      }
      if (Combo != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Combo);
      }
      if (Accuracy != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Accuracy);
      }
      if (SongPosition != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(SongPosition);
      }
      if (songList_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SongList);
      }
      modList_.WriteTo(ref output, _repeated_modList_codec);
      if (streamScreenCoordinates_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(StreamScreenCoordinates);
      }
      if (StreamDelayMs != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(StreamDelayMs);
      }
      if (StreamSyncStartMs != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(StreamSyncStartMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (team_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Team);
      }
      if (PlayState != global::TournamentAssistantShared.Models.Player.Types.PlayStates.Waiting) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlayState);
      }
      if (DownloadState != global::TournamentAssistantShared.Models.Player.Types.DownloadStates.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DownloadState);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (Combo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Combo);
      }
      if (Accuracy != 0D) {
        size += 1 + 8;
      }
      if (SongPosition != 0D) {
        size += 1 + 8;
      }
      if (songList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SongList);
      }
      size += modList_.CalculateSize(_repeated_modList_codec);
      if (streamScreenCoordinates_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamScreenCoordinates);
      }
      if (StreamDelayMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StreamDelayMs);
      }
      if (StreamSyncStartMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StreamSyncStartMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Player other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::TournamentAssistantShared.Models.User();
        }
        User.MergeFrom(other.User);
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.team_ != null) {
        if (team_ == null) {
          Team = new global::TournamentAssistantShared.Models.Team();
        }
        Team.MergeFrom(other.Team);
      }
      if (other.PlayState != global::TournamentAssistantShared.Models.Player.Types.PlayStates.Waiting) {
        PlayState = other.PlayState;
      }
      if (other.DownloadState != global::TournamentAssistantShared.Models.Player.Types.DownloadStates.None) {
        DownloadState = other.DownloadState;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.Combo != 0) {
        Combo = other.Combo;
      }
      if (other.Accuracy != 0D) {
        Accuracy = other.Accuracy;
      }
      if (other.SongPosition != 0D) {
        SongPosition = other.SongPosition;
      }
      if (other.songList_ != null) {
        if (songList_ == null) {
          SongList = new global::TournamentAssistantShared.Models.SongList();
        }
        SongList.MergeFrom(other.SongList);
      }
      modList_.Add(other.modList_);
      if (other.streamScreenCoordinates_ != null) {
        if (streamScreenCoordinates_ == null) {
          StreamScreenCoordinates = new global::TournamentAssistantShared.Models.Player.Types.Point();
        }
        StreamScreenCoordinates.MergeFrom(other.StreamScreenCoordinates);
      }
      if (other.StreamDelayMs != 0L) {
        StreamDelayMs = other.StreamDelayMs;
      }
      if (other.StreamSyncStartMs != 0L) {
        StreamSyncStartMs = other.StreamSyncStartMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::TournamentAssistantShared.Models.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            if (team_ == null) {
              Team = new global::TournamentAssistantShared.Models.Team();
            }
            input.ReadMessage(Team);
            break;
          }
          case 32: {
            PlayState = (global::TournamentAssistantShared.Models.Player.Types.PlayStates) input.ReadEnum();
            break;
          }
          case 40: {
            DownloadState = (global::TournamentAssistantShared.Models.Player.Types.DownloadStates) input.ReadEnum();
            break;
          }
          case 48: {
            Score = input.ReadInt32();
            break;
          }
          case 56: {
            Combo = input.ReadInt32();
            break;
          }
          case 65: {
            Accuracy = input.ReadDouble();
            break;
          }
          case 73: {
            SongPosition = input.ReadDouble();
            break;
          }
          case 82: {
            if (songList_ == null) {
              SongList = new global::TournamentAssistantShared.Models.SongList();
            }
            input.ReadMessage(SongList);
            break;
          }
          case 90: {
            modList_.AddEntriesFrom(input, _repeated_modList_codec);
            break;
          }
          case 98: {
            if (streamScreenCoordinates_ == null) {
              StreamScreenCoordinates = new global::TournamentAssistantShared.Models.Player.Types.Point();
            }
            input.ReadMessage(StreamScreenCoordinates);
            break;
          }
          case 104: {
            StreamDelayMs = input.ReadInt64();
            break;
          }
          case 112: {
            StreamSyncStartMs = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::TournamentAssistantShared.Models.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            if (team_ == null) {
              Team = new global::TournamentAssistantShared.Models.Team();
            }
            input.ReadMessage(Team);
            break;
          }
          case 32: {
            PlayState = (global::TournamentAssistantShared.Models.Player.Types.PlayStates) input.ReadEnum();
            break;
          }
          case 40: {
            DownloadState = (global::TournamentAssistantShared.Models.Player.Types.DownloadStates) input.ReadEnum();
            break;
          }
          case 48: {
            Score = input.ReadInt32();
            break;
          }
          case 56: {
            Combo = input.ReadInt32();
            break;
          }
          case 65: {
            Accuracy = input.ReadDouble();
            break;
          }
          case 73: {
            SongPosition = input.ReadDouble();
            break;
          }
          case 82: {
            if (songList_ == null) {
              SongList = new global::TournamentAssistantShared.Models.SongList();
            }
            input.ReadMessage(SongList);
            break;
          }
          case 90: {
            modList_.AddEntriesFrom(ref input, _repeated_modList_codec);
            break;
          }
          case 98: {
            if (streamScreenCoordinates_ == null) {
              StreamScreenCoordinates = new global::TournamentAssistantShared.Models.Player.Types.Point();
            }
            input.ReadMessage(StreamScreenCoordinates);
            break;
          }
          case 104: {
            StreamDelayMs = input.ReadInt64();
            break;
          }
          case 112: {
            StreamSyncStartMs = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Player message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum PlayStates {
        [pbr::OriginalName("Waiting")] Waiting = 0,
        [pbr::OriginalName("InGame")] InGame = 1,
      }

      public enum DownloadStates {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("Downloading")] Downloading = 1,
        [pbr::OriginalName("Downloaded")] Downloaded = 2,
        [pbr::OriginalName("DownloadError")] DownloadError = 3,
      }

      public sealed partial class Point : pb::IMessage<Point>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Point> _parser = new pb::MessageParser<Point>(() => new Point());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Point> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::TournamentAssistantShared.Models.Player.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Point() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Point(Point other) : this() {
          x_ = other.x_;
          y_ = other.y_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Point Clone() {
          return new Point(this);
        }

        /// <summary>Field number for the "x" field.</summary>
        public const int XFieldNumber = 1;
        private int x_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int X {
          get { return x_; }
          set {
            x_ = value;
          }
        }

        /// <summary>Field number for the "y" field.</summary>
        public const int YFieldNumber = 2;
        private int y_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Y {
          get { return y_; }
          set {
            y_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Point);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Point other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (X != other.X) return false;
          if (Y != other.Y) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (X != 0) hash ^= X.GetHashCode();
          if (Y != 0) hash ^= Y.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (X != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(X);
          }
          if (Y != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Y);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (X != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(X);
          }
          if (Y != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Y);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (X != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
          }
          if (Y != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Point other) {
          if (other == null) {
            return;
          }
          if (other.X != 0) {
            X = other.X;
          }
          if (other.Y != 0) {
            Y = other.Y;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                X = input.ReadInt32();
                break;
              }
              case 16: {
                Y = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                X = input.ReadInt32();
                break;
              }
              case 16: {
                Y = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class Match : pb::IMessage<Match>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Match> _parser = new pb::MessageParser<Match>(() => new Match());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Match> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Match() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Match(Match other) : this() {
      guid_ = other.guid_;
      players_ = other.players_.Clone();
      leader_ = other.leader_ != null ? other.leader_.Clone() : null;
      selectedLevel_ = other.selectedLevel_ != null ? other.selectedLevel_.Clone() : null;
      selectedCharacteristic_ = other.selectedCharacteristic_ != null ? other.selectedCharacteristic_.Clone() : null;
      selectedDifficulty_ = other.selectedDifficulty_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Match Clone() {
      return new Match(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private string guid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TournamentAssistantShared.Models.Player> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::TournamentAssistantShared.Models.Player.Parser);
    private readonly pbc::RepeatedField<global::TournamentAssistantShared.Models.Player> players_ = new pbc::RepeatedField<global::TournamentAssistantShared.Models.Player>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TournamentAssistantShared.Models.Player> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "leader" field.</summary>
    public const int LeaderFieldNumber = 3;
    private global::TournamentAssistantShared.Models.User leader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.User Leader {
      get { return leader_; }
      set {
        leader_ = value;
      }
    }

    /// <summary>Field number for the "selected_level" field.</summary>
    public const int SelectedLevelFieldNumber = 5;
    private global::TournamentAssistantShared.Models.PreviewBeatmapLevel selectedLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.PreviewBeatmapLevel SelectedLevel {
      get { return selectedLevel_; }
      set {
        selectedLevel_ = value;
      }
    }

    /// <summary>Field number for the "selected_characteristic" field.</summary>
    public const int SelectedCharacteristicFieldNumber = 6;
    private global::TournamentAssistantShared.Models.Characteristic selectedCharacteristic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.Characteristic SelectedCharacteristic {
      get { return selectedCharacteristic_; }
      set {
        selectedCharacteristic_ = value;
      }
    }

    /// <summary>Field number for the "selected_difficulty" field.</summary>
    public const int SelectedDifficultyFieldNumber = 7;
    private int selectedDifficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SelectedDifficulty {
      get { return selectedDifficulty_; }
      set {
        selectedDifficulty_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Match);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Match other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if(!players_.Equals(other.players_)) return false;
      if (!object.Equals(Leader, other.Leader)) return false;
      if (!object.Equals(SelectedLevel, other.SelectedLevel)) return false;
      if (!object.Equals(SelectedCharacteristic, other.SelectedCharacteristic)) return false;
      if (SelectedDifficulty != other.SelectedDifficulty) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      hash ^= players_.GetHashCode();
      if (leader_ != null) hash ^= Leader.GetHashCode();
      if (selectedLevel_ != null) hash ^= SelectedLevel.GetHashCode();
      if (selectedCharacteristic_ != null) hash ^= SelectedCharacteristic.GetHashCode();
      if (SelectedDifficulty != 0) hash ^= SelectedDifficulty.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (leader_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Leader);
      }
      if (selectedLevel_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SelectedLevel);
      }
      if (selectedCharacteristic_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SelectedCharacteristic);
      }
      if (SelectedDifficulty != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SelectedDifficulty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (leader_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Leader);
      }
      if (selectedLevel_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SelectedLevel);
      }
      if (selectedCharacteristic_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SelectedCharacteristic);
      }
      if (SelectedDifficulty != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SelectedDifficulty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (leader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Leader);
      }
      if (selectedLevel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelectedLevel);
      }
      if (selectedCharacteristic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelectedCharacteristic);
      }
      if (SelectedDifficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SelectedDifficulty);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Match other) {
      if (other == null) {
        return;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      players_.Add(other.players_);
      if (other.leader_ != null) {
        if (leader_ == null) {
          Leader = new global::TournamentAssistantShared.Models.User();
        }
        Leader.MergeFrom(other.Leader);
      }
      if (other.selectedLevel_ != null) {
        if (selectedLevel_ == null) {
          SelectedLevel = new global::TournamentAssistantShared.Models.PreviewBeatmapLevel();
        }
        SelectedLevel.MergeFrom(other.SelectedLevel);
      }
      if (other.selectedCharacteristic_ != null) {
        if (selectedCharacteristic_ == null) {
          SelectedCharacteristic = new global::TournamentAssistantShared.Models.Characteristic();
        }
        SelectedCharacteristic.MergeFrom(other.SelectedCharacteristic);
      }
      if (other.SelectedDifficulty != 0) {
        SelectedDifficulty = other.SelectedDifficulty;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 26: {
            if (leader_ == null) {
              Leader = new global::TournamentAssistantShared.Models.User();
            }
            input.ReadMessage(Leader);
            break;
          }
          case 42: {
            if (selectedLevel_ == null) {
              SelectedLevel = new global::TournamentAssistantShared.Models.PreviewBeatmapLevel();
            }
            input.ReadMessage(SelectedLevel);
            break;
          }
          case 50: {
            if (selectedCharacteristic_ == null) {
              SelectedCharacteristic = new global::TournamentAssistantShared.Models.Characteristic();
            }
            input.ReadMessage(SelectedCharacteristic);
            break;
          }
          case 56: {
            SelectedDifficulty = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 26: {
            if (leader_ == null) {
              Leader = new global::TournamentAssistantShared.Models.User();
            }
            input.ReadMessage(Leader);
            break;
          }
          case 42: {
            if (selectedLevel_ == null) {
              SelectedLevel = new global::TournamentAssistantShared.Models.PreviewBeatmapLevel();
            }
            input.ReadMessage(SelectedLevel);
            break;
          }
          case 50: {
            if (selectedCharacteristic_ == null) {
              SelectedCharacteristic = new global::TournamentAssistantShared.Models.Characteristic();
            }
            input.ReadMessage(SelectedCharacteristic);
            break;
          }
          case 56: {
            SelectedDifficulty = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class QualifierEvent : pb::IMessage<QualifierEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<QualifierEvent> _parser = new pb::MessageParser<QualifierEvent>(() => new QualifierEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<QualifierEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QualifierEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QualifierEvent(QualifierEvent other) : this() {
      eventId_ = other.eventId_;
      name_ = other.name_;
      guild_ = other.guild_ != null ? other.guild_.Clone() : null;
      infoChannel_ = other.infoChannel_ != null ? other.infoChannel_.Clone() : null;
      qualifierMaps_ = other.qualifierMaps_.Clone();
      sendScoresToInfoChannel_ = other.sendScoresToInfoChannel_;
      flags_ = other.flags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public QualifierEvent Clone() {
      return new QualifierEvent(this);
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 1;
    private string eventId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "guild" field.</summary>
    public const int GuildFieldNumber = 3;
    private global::TournamentAssistantShared.Models.Discord.Guild guild_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.Discord.Guild Guild {
      get { return guild_; }
      set {
        guild_ = value;
      }
    }

    /// <summary>Field number for the "info_channel" field.</summary>
    public const int InfoChannelFieldNumber = 4;
    private global::TournamentAssistantShared.Models.Discord.Channel infoChannel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.Discord.Channel InfoChannel {
      get { return infoChannel_; }
      set {
        infoChannel_ = value;
      }
    }

    /// <summary>Field number for the "qualifier_maps" field.</summary>
    public const int QualifierMapsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TournamentAssistantShared.Models.GameplayParameters> _repeated_qualifierMaps_codec
        = pb::FieldCodec.ForMessage(42, global::TournamentAssistantShared.Models.GameplayParameters.Parser);
    private readonly pbc::RepeatedField<global::TournamentAssistantShared.Models.GameplayParameters> qualifierMaps_ = new pbc::RepeatedField<global::TournamentAssistantShared.Models.GameplayParameters>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TournamentAssistantShared.Models.GameplayParameters> QualifierMaps {
      get { return qualifierMaps_; }
    }

    /// <summary>Field number for the "send_scores_to_info_channel" field.</summary>
    public const int SendScoresToInfoChannelFieldNumber = 6;
    private bool sendScoresToInfoChannel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SendScoresToInfoChannel {
      get { return sendScoresToInfoChannel_; }
      set {
        sendScoresToInfoChannel_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 7;
    private int flags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Flags {
      get { return flags_; }
      set {
        flags_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as QualifierEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(QualifierEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventId != other.EventId) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Guild, other.Guild)) return false;
      if (!object.Equals(InfoChannel, other.InfoChannel)) return false;
      if(!qualifierMaps_.Equals(other.qualifierMaps_)) return false;
      if (SendScoresToInfoChannel != other.SendScoresToInfoChannel) return false;
      if (Flags != other.Flags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (guild_ != null) hash ^= Guild.GetHashCode();
      if (infoChannel_ != null) hash ^= InfoChannel.GetHashCode();
      hash ^= qualifierMaps_.GetHashCode();
      if (SendScoresToInfoChannel != false) hash ^= SendScoresToInfoChannel.GetHashCode();
      if (Flags != 0) hash ^= Flags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EventId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (guild_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Guild);
      }
      if (infoChannel_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(InfoChannel);
      }
      qualifierMaps_.WriteTo(output, _repeated_qualifierMaps_codec);
      if (SendScoresToInfoChannel != false) {
        output.WriteRawTag(48);
        output.WriteBool(SendScoresToInfoChannel);
      }
      if (Flags != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EventId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (guild_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Guild);
      }
      if (infoChannel_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(InfoChannel);
      }
      qualifierMaps_.WriteTo(ref output, _repeated_qualifierMaps_codec);
      if (SendScoresToInfoChannel != false) {
        output.WriteRawTag(48);
        output.WriteBool(SendScoresToInfoChannel);
      }
      if (Flags != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (guild_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Guild);
      }
      if (infoChannel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoChannel);
      }
      size += qualifierMaps_.CalculateSize(_repeated_qualifierMaps_codec);
      if (SendScoresToInfoChannel != false) {
        size += 1 + 1;
      }
      if (Flags != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Flags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(QualifierEvent other) {
      if (other == null) {
        return;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.guild_ != null) {
        if (guild_ == null) {
          Guild = new global::TournamentAssistantShared.Models.Discord.Guild();
        }
        Guild.MergeFrom(other.Guild);
      }
      if (other.infoChannel_ != null) {
        if (infoChannel_ == null) {
          InfoChannel = new global::TournamentAssistantShared.Models.Discord.Channel();
        }
        InfoChannel.MergeFrom(other.InfoChannel);
      }
      qualifierMaps_.Add(other.qualifierMaps_);
      if (other.SendScoresToInfoChannel != false) {
        SendScoresToInfoChannel = other.SendScoresToInfoChannel;
      }
      if (other.Flags != 0) {
        Flags = other.Flags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (guild_ == null) {
              Guild = new global::TournamentAssistantShared.Models.Discord.Guild();
            }
            input.ReadMessage(Guild);
            break;
          }
          case 34: {
            if (infoChannel_ == null) {
              InfoChannel = new global::TournamentAssistantShared.Models.Discord.Channel();
            }
            input.ReadMessage(InfoChannel);
            break;
          }
          case 42: {
            qualifierMaps_.AddEntriesFrom(input, _repeated_qualifierMaps_codec);
            break;
          }
          case 48: {
            SendScoresToInfoChannel = input.ReadBool();
            break;
          }
          case 56: {
            Flags = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EventId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (guild_ == null) {
              Guild = new global::TournamentAssistantShared.Models.Discord.Guild();
            }
            input.ReadMessage(Guild);
            break;
          }
          case 34: {
            if (infoChannel_ == null) {
              InfoChannel = new global::TournamentAssistantShared.Models.Discord.Channel();
            }
            input.ReadMessage(InfoChannel);
            break;
          }
          case 42: {
            qualifierMaps_.AddEntriesFrom(ref input, _repeated_qualifierMaps_codec);
            break;
          }
          case 48: {
            SendScoresToInfoChannel = input.ReadBool();
            break;
          }
          case 56: {
            Flags = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the QualifierEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum EventSettings {
        [pbr::OriginalName("None")] None = 0,
        [pbr::OriginalName("HideScoresFromPlayers")] HideScoresFromPlayers = 1,
        [pbr::OriginalName("DisableScoresaberSubmission")] DisableScoresaberSubmission = 2,
        [pbr::OriginalName("EnableLeaderboardMessage")] EnableLeaderboardMessage = 3,
      }

    }
    #endregion

  }

  public sealed partial class CoreServer : pb::IMessage<CoreServer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CoreServer> _parser = new pb::MessageParser<CoreServer>(() => new CoreServer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CoreServer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoreServer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoreServer(CoreServer other) : this() {
      name_ = other.name_;
      address_ = other.address_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CoreServer Clone() {
      return new CoreServer(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 2;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 3;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CoreServer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CoreServer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Address != other.Address) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Address);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Address);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CoreServer other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Address = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Address = input.ReadString();
            break;
          }
          case 24: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class State : pb::IMessage<State>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<State> _parser = new pb::MessageParser<State>(() => new State());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<State> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public State() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public State(State other) : this() {
      serverSettings_ = other.serverSettings_ != null ? other.serverSettings_.Clone() : null;
      players_ = other.players_.Clone();
      coordinators_ = other.coordinators_.Clone();
      matches_ = other.matches_.Clone();
      events_ = other.events_.Clone();
      knownHosts_ = other.knownHosts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public State Clone() {
      return new State(this);
    }

    /// <summary>Field number for the "server_settings" field.</summary>
    public const int ServerSettingsFieldNumber = 1;
    private global::TournamentAssistantShared.Models.ServerSettings serverSettings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.ServerSettings ServerSettings {
      get { return serverSettings_; }
      set {
        serverSettings_ = value;
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TournamentAssistantShared.Models.Player> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::TournamentAssistantShared.Models.Player.Parser);
    private readonly pbc::RepeatedField<global::TournamentAssistantShared.Models.Player> players_ = new pbc::RepeatedField<global::TournamentAssistantShared.Models.Player>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TournamentAssistantShared.Models.Player> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "coordinators" field.</summary>
    public const int CoordinatorsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::TournamentAssistantShared.Models.Coordinator> _repeated_coordinators_codec
        = pb::FieldCodec.ForMessage(26, global::TournamentAssistantShared.Models.Coordinator.Parser);
    private readonly pbc::RepeatedField<global::TournamentAssistantShared.Models.Coordinator> coordinators_ = new pbc::RepeatedField<global::TournamentAssistantShared.Models.Coordinator>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TournamentAssistantShared.Models.Coordinator> Coordinators {
      get { return coordinators_; }
    }

    /// <summary>Field number for the "matches" field.</summary>
    public const int MatchesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::TournamentAssistantShared.Models.Match> _repeated_matches_codec
        = pb::FieldCodec.ForMessage(34, global::TournamentAssistantShared.Models.Match.Parser);
    private readonly pbc::RepeatedField<global::TournamentAssistantShared.Models.Match> matches_ = new pbc::RepeatedField<global::TournamentAssistantShared.Models.Match>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TournamentAssistantShared.Models.Match> Matches {
      get { return matches_; }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::TournamentAssistantShared.Models.QualifierEvent> _repeated_events_codec
        = pb::FieldCodec.ForMessage(42, global::TournamentAssistantShared.Models.QualifierEvent.Parser);
    private readonly pbc::RepeatedField<global::TournamentAssistantShared.Models.QualifierEvent> events_ = new pbc::RepeatedField<global::TournamentAssistantShared.Models.QualifierEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TournamentAssistantShared.Models.QualifierEvent> Events {
      get { return events_; }
    }

    /// <summary>Field number for the "known_hosts" field.</summary>
    public const int KnownHostsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::TournamentAssistantShared.Models.CoreServer> _repeated_knownHosts_codec
        = pb::FieldCodec.ForMessage(50, global::TournamentAssistantShared.Models.CoreServer.Parser);
    private readonly pbc::RepeatedField<global::TournamentAssistantShared.Models.CoreServer> knownHosts_ = new pbc::RepeatedField<global::TournamentAssistantShared.Models.CoreServer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TournamentAssistantShared.Models.CoreServer> KnownHosts {
      get { return knownHosts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as State);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(State other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ServerSettings, other.ServerSettings)) return false;
      if(!players_.Equals(other.players_)) return false;
      if(!coordinators_.Equals(other.coordinators_)) return false;
      if(!matches_.Equals(other.matches_)) return false;
      if(!events_.Equals(other.events_)) return false;
      if(!knownHosts_.Equals(other.knownHosts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (serverSettings_ != null) hash ^= ServerSettings.GetHashCode();
      hash ^= players_.GetHashCode();
      hash ^= coordinators_.GetHashCode();
      hash ^= matches_.GetHashCode();
      hash ^= events_.GetHashCode();
      hash ^= knownHosts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (serverSettings_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ServerSettings);
      }
      players_.WriteTo(output, _repeated_players_codec);
      coordinators_.WriteTo(output, _repeated_coordinators_codec);
      matches_.WriteTo(output, _repeated_matches_codec);
      events_.WriteTo(output, _repeated_events_codec);
      knownHosts_.WriteTo(output, _repeated_knownHosts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (serverSettings_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ServerSettings);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      coordinators_.WriteTo(ref output, _repeated_coordinators_codec);
      matches_.WriteTo(ref output, _repeated_matches_codec);
      events_.WriteTo(ref output, _repeated_events_codec);
      knownHosts_.WriteTo(ref output, _repeated_knownHosts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (serverSettings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServerSettings);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      size += coordinators_.CalculateSize(_repeated_coordinators_codec);
      size += matches_.CalculateSize(_repeated_matches_codec);
      size += events_.CalculateSize(_repeated_events_codec);
      size += knownHosts_.CalculateSize(_repeated_knownHosts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(State other) {
      if (other == null) {
        return;
      }
      if (other.serverSettings_ != null) {
        if (serverSettings_ == null) {
          ServerSettings = new global::TournamentAssistantShared.Models.ServerSettings();
        }
        ServerSettings.MergeFrom(other.ServerSettings);
      }
      players_.Add(other.players_);
      coordinators_.Add(other.coordinators_);
      matches_.Add(other.matches_);
      events_.Add(other.events_);
      knownHosts_.Add(other.knownHosts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (serverSettings_ == null) {
              ServerSettings = new global::TournamentAssistantShared.Models.ServerSettings();
            }
            input.ReadMessage(ServerSettings);
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 26: {
            coordinators_.AddEntriesFrom(input, _repeated_coordinators_codec);
            break;
          }
          case 34: {
            matches_.AddEntriesFrom(input, _repeated_matches_codec);
            break;
          }
          case 42: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
          case 50: {
            knownHosts_.AddEntriesFrom(input, _repeated_knownHosts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (serverSettings_ == null) {
              ServerSettings = new global::TournamentAssistantShared.Models.ServerSettings();
            }
            input.ReadMessage(ServerSettings);
            break;
          }
          case 18: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 26: {
            coordinators_.AddEntriesFrom(ref input, _repeated_coordinators_codec);
            break;
          }
          case 34: {
            matches_.AddEntriesFrom(ref input, _repeated_matches_codec);
            break;
          }
          case 42: {
            events_.AddEntriesFrom(ref input, _repeated_events_codec);
            break;
          }
          case 50: {
            knownHosts_.AddEntriesFrom(ref input, _repeated_knownHosts_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Score : pb::IMessage<Score>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Score> _parser = new pb::MessageParser<Score>(() => new Score());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Score> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.ModelsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Score() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Score(Score other) : this() {
      eventId_ = other.eventId_;
      parameters_ = other.parameters_ != null ? other.parameters_.Clone() : null;
      userId_ = other.userId_;
      username_ = other.username_;
      score_ = other.score_;
      fullCombo_ = other.fullCombo_;
      color_ = other.color_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Score Clone() {
      return new Score(this);
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 1;
    private string eventId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 2;
    private global::TournamentAssistantShared.Models.GameplayParameters parameters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.GameplayParameters Parameters {
      get { return parameters_; }
      set {
        parameters_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 3;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 4;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int Score_FieldNumber = 5;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score_ {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "full_combo" field.</summary>
    public const int FullComboFieldNumber = 6;
    private bool fullCombo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FullCombo {
      get { return fullCombo_; }
      set {
        fullCombo_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 7;
    private string color_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Color {
      get { return color_; }
      set {
        color_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Score);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Score other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventId != other.EventId) return false;
      if (!object.Equals(Parameters, other.Parameters)) return false;
      if (UserId != other.UserId) return false;
      if (Username != other.Username) return false;
      if (Score_ != other.Score_) return false;
      if (FullCombo != other.FullCombo) return false;
      if (Color != other.Color) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      if (parameters_ != null) hash ^= Parameters.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Score_ != 0) hash ^= Score_.GetHashCode();
      if (FullCombo != false) hash ^= FullCombo.GetHashCode();
      if (Color.Length != 0) hash ^= Color.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EventId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventId);
      }
      if (parameters_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Parameters);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (Score_ != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Score_);
      }
      if (FullCombo != false) {
        output.WriteRawTag(48);
        output.WriteBool(FullCombo);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EventId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventId);
      }
      if (parameters_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Parameters);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (Score_ != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Score_);
      }
      if (FullCombo != false) {
        output.WriteRawTag(48);
        output.WriteBool(FullCombo);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      if (parameters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parameters);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Score_ != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score_);
      }
      if (FullCombo != false) {
        size += 1 + 1;
      }
      if (Color.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Color);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Score other) {
      if (other == null) {
        return;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      if (other.parameters_ != null) {
        if (parameters_ == null) {
          Parameters = new global::TournamentAssistantShared.Models.GameplayParameters();
        }
        Parameters.MergeFrom(other.Parameters);
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Score_ != 0) {
        Score_ = other.Score_;
      }
      if (other.FullCombo != false) {
        FullCombo = other.FullCombo;
      }
      if (other.Color.Length != 0) {
        Color = other.Color;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventId = input.ReadString();
            break;
          }
          case 18: {
            if (parameters_ == null) {
              Parameters = new global::TournamentAssistantShared.Models.GameplayParameters();
            }
            input.ReadMessage(Parameters);
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 40: {
            Score_ = input.ReadInt32();
            break;
          }
          case 48: {
            FullCombo = input.ReadBool();
            break;
          }
          case 58: {
            Color = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EventId = input.ReadString();
            break;
          }
          case 18: {
            if (parameters_ == null) {
              Parameters = new global::TournamentAssistantShared.Models.GameplayParameters();
            }
            input.ReadMessage(Parameters);
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 40: {
            Score_ = input.ReadInt32();
            break;
          }
          case 48: {
            FullCombo = input.ReadBool();
            break;
          }
          case 58: {
            Color = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
