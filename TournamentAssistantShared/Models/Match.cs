// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: match.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TournamentAssistantShared.Models {

  /// <summary>Holder for reflection information generated from match.proto</summary>
  public static partial class MatchReflection {

    #region Descriptor
    /// <summary>File descriptor for match.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MatchReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgttYXRjaC5wcm90bxIgVG91cm5hbWVudEFzc2lzdGFudFNoYXJlZC5Nb2Rl",
            "bHMaDHBsYXllci5wcm90bxoRY29vcmRpbmF0b3IucHJvdG8aG3ByZXZpZXdf",
            "YmVhdG1hcF9sZXZlbC5wcm90bxoUY2hhcmFjdGVyaXN0aWMucHJvdG8imwMK",
            "BU1hdGNoEgwKBGd1aWQYASABKAkSOQoHcGxheWVycxgCIAMoCzIoLlRvdXJu",
            "YW1lbnRBc3Npc3RhbnRTaGFyZWQuTW9kZWxzLlBsYXllchJECgtjb29yZGlu",
            "YXRvchgDIAEoCzItLlRvdXJuYW1lbnRBc3Npc3RhbnRTaGFyZWQuTW9kZWxz",
            "LkNvb3JkaW5hdG9ySAASOgoGcGxheWVyGAQgASgLMiguVG91cm5hbWVudEFz",
            "c2lzdGFudFNoYXJlZC5Nb2RlbHMuUGxheWVySAASTQoOc2VsZWN0ZWRfbGV2",
            "ZWwYBSABKAsyNS5Ub3VybmFtZW50QXNzaXN0YW50U2hhcmVkLk1vZGVscy5Q",
            "cmV2aWV3QmVhdG1hcExldmVsElEKF3NlbGVjdGVkX2NoYXJhY3RlcmlzdGlj",
            "GAYgASgLMjAuVG91cm5hbWVudEFzc2lzdGFudFNoYXJlZC5Nb2RlbHMuQ2hh",
            "cmFjdGVyaXN0aWMSGwoTc2VsZWN0ZWRfZGlmZmljdWx0eRgHIAEoBUIICgZs",
            "ZWFkZXJCI6oCIFRvdXJuYW1lbnRBc3Npc3RhbnRTaGFyZWQuTW9kZWxzYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::TournamentAssistantShared.Models.PlayerReflection.Descriptor, global::TournamentAssistantShared.Models.CoordinatorReflection.Descriptor, global::TournamentAssistantShared.Models.PreviewBeatmapLevelReflection.Descriptor, global::TournamentAssistantShared.Models.CharacteristicReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TournamentAssistantShared.Models.Match), global::TournamentAssistantShared.Models.Match.Parser, new[]{ "Guid", "Players", "Coordinator", "Player", "SelectedLevel", "SelectedCharacteristic", "SelectedDifficulty" }, new[]{ "Leader" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Match : pb::IMessage<Match>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Match> _parser = new pb::MessageParser<Match>(() => new Match());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Match> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TournamentAssistantShared.Models.MatchReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Match() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Match(Match other) : this() {
      guid_ = other.guid_;
      players_ = other.players_.Clone();
      selectedLevel_ = other.selectedLevel_ != null ? other.selectedLevel_.Clone() : null;
      selectedCharacteristic_ = other.selectedCharacteristic_ != null ? other.selectedCharacteristic_.Clone() : null;
      selectedDifficulty_ = other.selectedDifficulty_;
      switch (other.LeaderCase) {
        case LeaderOneofCase.Coordinator:
          Coordinator = other.Coordinator.Clone();
          break;
        case LeaderOneofCase.Player:
          Player = other.Player.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Match Clone() {
      return new Match(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private string guid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::TournamentAssistantShared.Models.Player> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::TournamentAssistantShared.Models.Player.Parser);
    private readonly pbc::RepeatedField<global::TournamentAssistantShared.Models.Player> players_ = new pbc::RepeatedField<global::TournamentAssistantShared.Models.Player>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::TournamentAssistantShared.Models.Player> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "coordinator" field.</summary>
    public const int CoordinatorFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.Coordinator Coordinator {
      get { return leaderCase_ == LeaderOneofCase.Coordinator ? (global::TournamentAssistantShared.Models.Coordinator) leader_ : null; }
      set {
        leader_ = value;
        leaderCase_ = value == null ? LeaderOneofCase.None : LeaderOneofCase.Coordinator;
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.Player Player {
      get { return leaderCase_ == LeaderOneofCase.Player ? (global::TournamentAssistantShared.Models.Player) leader_ : null; }
      set {
        leader_ = value;
        leaderCase_ = value == null ? LeaderOneofCase.None : LeaderOneofCase.Player;
      }
    }

    /// <summary>Field number for the "selected_level" field.</summary>
    public const int SelectedLevelFieldNumber = 5;
    private global::TournamentAssistantShared.Models.PreviewBeatmapLevel selectedLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.PreviewBeatmapLevel SelectedLevel {
      get { return selectedLevel_; }
      set {
        selectedLevel_ = value;
      }
    }

    /// <summary>Field number for the "selected_characteristic" field.</summary>
    public const int SelectedCharacteristicFieldNumber = 6;
    private global::TournamentAssistantShared.Models.Characteristic selectedCharacteristic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::TournamentAssistantShared.Models.Characteristic SelectedCharacteristic {
      get { return selectedCharacteristic_; }
      set {
        selectedCharacteristic_ = value;
      }
    }

    /// <summary>Field number for the "selected_difficulty" field.</summary>
    public const int SelectedDifficultyFieldNumber = 7;
    private int selectedDifficulty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SelectedDifficulty {
      get { return selectedDifficulty_; }
      set {
        selectedDifficulty_ = value;
      }
    }

    private object leader_;
    /// <summary>Enum of possible cases for the "leader" oneof.</summary>
    public enum LeaderOneofCase {
      None = 0,
      Coordinator = 3,
      Player = 4,
    }
    private LeaderOneofCase leaderCase_ = LeaderOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LeaderOneofCase LeaderCase {
      get { return leaderCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeader() {
      leaderCase_ = LeaderOneofCase.None;
      leader_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Match);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Match other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if(!players_.Equals(other.players_)) return false;
      if (!object.Equals(Coordinator, other.Coordinator)) return false;
      if (!object.Equals(Player, other.Player)) return false;
      if (!object.Equals(SelectedLevel, other.SelectedLevel)) return false;
      if (!object.Equals(SelectedCharacteristic, other.SelectedCharacteristic)) return false;
      if (SelectedDifficulty != other.SelectedDifficulty) return false;
      if (LeaderCase != other.LeaderCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      hash ^= players_.GetHashCode();
      if (leaderCase_ == LeaderOneofCase.Coordinator) hash ^= Coordinator.GetHashCode();
      if (leaderCase_ == LeaderOneofCase.Player) hash ^= Player.GetHashCode();
      if (selectedLevel_ != null) hash ^= SelectedLevel.GetHashCode();
      if (selectedCharacteristic_ != null) hash ^= SelectedCharacteristic.GetHashCode();
      if (SelectedDifficulty != 0) hash ^= SelectedDifficulty.GetHashCode();
      hash ^= (int) leaderCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (leaderCase_ == LeaderOneofCase.Coordinator) {
        output.WriteRawTag(26);
        output.WriteMessage(Coordinator);
      }
      if (leaderCase_ == LeaderOneofCase.Player) {
        output.WriteRawTag(34);
        output.WriteMessage(Player);
      }
      if (selectedLevel_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SelectedLevel);
      }
      if (selectedCharacteristic_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SelectedCharacteristic);
      }
      if (SelectedDifficulty != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SelectedDifficulty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (leaderCase_ == LeaderOneofCase.Coordinator) {
        output.WriteRawTag(26);
        output.WriteMessage(Coordinator);
      }
      if (leaderCase_ == LeaderOneofCase.Player) {
        output.WriteRawTag(34);
        output.WriteMessage(Player);
      }
      if (selectedLevel_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SelectedLevel);
      }
      if (selectedCharacteristic_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SelectedCharacteristic);
      }
      if (SelectedDifficulty != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SelectedDifficulty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (leaderCase_ == LeaderOneofCase.Coordinator) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Coordinator);
      }
      if (leaderCase_ == LeaderOneofCase.Player) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (selectedLevel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelectedLevel);
      }
      if (selectedCharacteristic_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelectedCharacteristic);
      }
      if (SelectedDifficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SelectedDifficulty);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Match other) {
      if (other == null) {
        return;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      players_.Add(other.players_);
      if (other.selectedLevel_ != null) {
        if (selectedLevel_ == null) {
          SelectedLevel = new global::TournamentAssistantShared.Models.PreviewBeatmapLevel();
        }
        SelectedLevel.MergeFrom(other.SelectedLevel);
      }
      if (other.selectedCharacteristic_ != null) {
        if (selectedCharacteristic_ == null) {
          SelectedCharacteristic = new global::TournamentAssistantShared.Models.Characteristic();
        }
        SelectedCharacteristic.MergeFrom(other.SelectedCharacteristic);
      }
      if (other.SelectedDifficulty != 0) {
        SelectedDifficulty = other.SelectedDifficulty;
      }
      switch (other.LeaderCase) {
        case LeaderOneofCase.Coordinator:
          if (Coordinator == null) {
            Coordinator = new global::TournamentAssistantShared.Models.Coordinator();
          }
          Coordinator.MergeFrom(other.Coordinator);
          break;
        case LeaderOneofCase.Player:
          if (Player == null) {
            Player = new global::TournamentAssistantShared.Models.Player();
          }
          Player.MergeFrom(other.Player);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 26: {
            global::TournamentAssistantShared.Models.Coordinator subBuilder = new global::TournamentAssistantShared.Models.Coordinator();
            if (leaderCase_ == LeaderOneofCase.Coordinator) {
              subBuilder.MergeFrom(Coordinator);
            }
            input.ReadMessage(subBuilder);
            Coordinator = subBuilder;
            break;
          }
          case 34: {
            global::TournamentAssistantShared.Models.Player subBuilder = new global::TournamentAssistantShared.Models.Player();
            if (leaderCase_ == LeaderOneofCase.Player) {
              subBuilder.MergeFrom(Player);
            }
            input.ReadMessage(subBuilder);
            Player = subBuilder;
            break;
          }
          case 42: {
            if (selectedLevel_ == null) {
              SelectedLevel = new global::TournamentAssistantShared.Models.PreviewBeatmapLevel();
            }
            input.ReadMessage(SelectedLevel);
            break;
          }
          case 50: {
            if (selectedCharacteristic_ == null) {
              SelectedCharacteristic = new global::TournamentAssistantShared.Models.Characteristic();
            }
            input.ReadMessage(SelectedCharacteristic);
            break;
          }
          case 56: {
            SelectedDifficulty = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 26: {
            global::TournamentAssistantShared.Models.Coordinator subBuilder = new global::TournamentAssistantShared.Models.Coordinator();
            if (leaderCase_ == LeaderOneofCase.Coordinator) {
              subBuilder.MergeFrom(Coordinator);
            }
            input.ReadMessage(subBuilder);
            Coordinator = subBuilder;
            break;
          }
          case 34: {
            global::TournamentAssistantShared.Models.Player subBuilder = new global::TournamentAssistantShared.Models.Player();
            if (leaderCase_ == LeaderOneofCase.Player) {
              subBuilder.MergeFrom(Player);
            }
            input.ReadMessage(subBuilder);
            Player = subBuilder;
            break;
          }
          case 42: {
            if (selectedLevel_ == null) {
              SelectedLevel = new global::TournamentAssistantShared.Models.PreviewBeatmapLevel();
            }
            input.ReadMessage(SelectedLevel);
            break;
          }
          case 50: {
            if (selectedCharacteristic_ == null) {
              SelectedCharacteristic = new global::TournamentAssistantShared.Models.Characteristic();
            }
            input.ReadMessage(SelectedCharacteristic);
            break;
          }
          case 56: {
            SelectedDifficulty = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
